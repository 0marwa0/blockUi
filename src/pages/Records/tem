import React from "react";
import ReactDOM from "react-dom";
import RecordTemplet from "./recordTemplet.js";
import { Autocomplete } from "@yazanaabed/react-autocomplete";
export default class index extends React.Component {
  constructor(props) {
    super(props);

    this.state = {
      showDropdown: true,
      currentData: { item: "", price: "", qant: "" },
      items: [
        {
          item: "item1",
          id: 2,
        },
        {
          item: "item2",
          id: 3,
        },
        {
          item: "item5",
          id: 4,
        },
      ],
      selectedItem: [
        {
          item: "item3",
          id: 2,
        },
      ],
    };
  }

  filterItemsBySearchInput = (inputValue) => {
    return this.state.items.filter(
      (item) =>
        !inputValue ||
        item.item.toLowerCase().includes(inputValue.toLowerCase())
    );
  };

  onSelectedItemChanged = (selection) => {
    this.setState((prevState) => {
      let selectedItem = [...prevState.selectedItem];
      let isItemFound = selectedItem.find((item) => item.id === selection.id);

      if (!isItemFound) {
        selectedItem.push(selection);
      }

      return {
        selectedItem,
      };
    });
  };

  render() {
    return (
      <div className="App">
        <RecordTemplet data={this.state.selectedItem}>
          <Autocomplete
            getOptionSelected="dfodfo"
          
            onChange={(selection) => this.onSelectedItemChanged(selection)}
          >
            {({
              getContainerProps,
              getItemProps,
              getInputProps,
              getMenuProps,
              inputValue,
              isOpen,
              highlightedIndex,
            }) => {
              let itemsFiltered = this.filterItemsBySearchInput(inputValue);

              return (
                <div
                //      {...getContainerProps({ className: styles.dropdownContainer })}
                >
                  <input
                    type="text"
                    {...getInputProps({
                      // className: styles.dropdownInput,
                    })}
                  />

                  {isOpen ? (
                    <ul
                    //{...getMenuProps({ className: styles.menuDropdown })}
                    >
                      {itemsFiltered.map((item, index) => (
                        <li {...getItemProps({ item, index })}>
                          <div
                            //   className={styles.dropdownItem}
                            style={{
                              backgroundColor:
                                highlightedIndex === index ? "#e0f4ea" : "",
                            }}
                          >
                            {item.item}
                          </div>
                        </li>
                      ))}
                    </ul>
                  ) : null}
                </div>
              );
            }}
          </Autocomplete>
          {/**  <input value={} />
          <input value={} />
          <input value={} />*/}
        </RecordTemplet>
        <ul>
          {this.state.selectedItem.map((item, index) => (
            <li key={index}>{item.item}</li>
          ))}
        </ul>
      </div>
    );
  }
}
